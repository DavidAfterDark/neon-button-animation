---
interface Props {
	text: string;
	class?: string;
}

const { text, class: className } = Astro.props;
---

<button class={`button ${className}`}>
	{ text }
</button>

<style lang="scss">
	.button {
		width: 270px;
		height: 100px;
		color: #fff;
		background-color: #151515;
		border-radius: 10px;
		font-size: 1.5rem;
		letter-spacing: 1px;
		font-weight: 600;
		-webkit-text-stroke: 1px #000;
		position: relative;
		z-index: 0;

		@media screen and (min-width: 768px) {
			width: 600px;
			height: 120px;
			font-size: 2rem;
		}

		&::before {
			content: "";
			background: linear-gradient(45deg, #ff0000, #ff7300, #fffb00, #48ff00, #00ffd5, #002bff, #7a00ff, #ff00cb, #ff0000);
			position: absolute;
			top: -4px;
			left: -4px;
			width: calc(100% + 8px);
			height: calc(100% + 8px);
			border-radius: 10px;
			background-size: 400%;
			z-index: -1;
			opacity: 0;
			transition: opacity 0.3s ease;
			animation: glow-effect 10s linear infinite;
		}

		&:hover::before {
			opacity: 1;
		}

		&::after {
			content: "";
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			background: #111;
			border-radius: 10px;
			z-index: -1;
		}
		
		&:active::after {
			background: #222;
		}
	}

	@keyframes glow-effect {
		0% {
			background-position: 400% 0;
		}
		
		100% {
			background-position: 0 0;
		}
	}
</style>
